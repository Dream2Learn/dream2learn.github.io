* {
	box-sizing: border-box;
}

:root {
	scroll-padding-top: 6rem;
	scroll-behavior: smooth;

	--col-button-orange: #fca62b;
	--col-button-yellow: #fcc250;
	--col-blue: #283673;
	--col-yellow: #f8dc3c;
	--col-orange: #f0773a;
	--col-red: #b02228;
	--col-blue-shadow: #131742;
	--col-blue-shadow-7f: #1317427f;

	--font-heading: Zilla Slab, "Gill Sans", "Gill Sans MT", "Trebuchet MS", sans-serif;
	--font-large: Atkinson Hyperlegible, Overpass, "Gill Sans", "Gill Sans MT", "Trebuchet MS", sans-serif;
	--font-body: Overpass, sans-serif;


	/* M 140,0 0,94 V 179 l 140,94 140,-94 V 94 Z */
	/* width = 280; height = 273 */

	--button-clip-path: polygon(
		calc(140 / 280 * 100%) 0,
		0 calc(94 / 273 * 100%),
		0 calc(179 / 273 * 100%),
		calc(140 / 280 * 100%) 100%,
		100% calc(179 / 273 * 100%),
		100% calc(94 / 273 * 100%));

	--button-width-fac: 280;
	--button-height-fac: 273;

	/* dimensions of one slanted edge of the hexagonal button */
	--button-slant-width-fac: 140;
	--button-slant-height-fac: 94;

	/* factors to multiply with the shift sizes in order for the slants to line up */
	--button-slant-shift-width-fac: calc(1 - var(--button-slant-width-fac) / var(--button-width-fac));
	--button-slant-shift-height-fac: calc(1 - var(--button-slant-height-fac) / var(--button-height-fac));


	--button-aspect-ratio: calc(var(--button-width-fac) / var(--button-height-fac));

	--button-width: 115px;
	--button-height: calc(var(--button-width) / var(--button-aspect-ratio));

	--button-width-large: 200px;
	--button-height-large: calc(var(--button-width-large) / var(--button-aspect-ratio));

	/* shift for a small button to be positioned properly amid a group of large buttons */
	--button-large-to-small-shift-height: calc((var(--button-height-large) - var(--button-height)) / 2);
	--button-large-to-small-shift-width: calc((var(--button-width-large) - var(--button-width)) / 2);

	--button-bounce-ease: cubic-bezier(0, 1.82, 0.76, 1);

	--logomark-height-fac: 226;
	--logomark-to-button-ratio: calc(var(--logomark-height-fac) / var(--button-height-fac));
}

body {
	/* width: 100vw; */
	min-height: 100vh;
	margin: 0;

	min-width: 1050px;

	font-family: var(--font-body);
	font-weight: 600;

	color: var(--col-blue);
}

main {
	display: flex;
	flex-flow: column;
}

header {
	--gradient-height: 20vh;

	min-height: 100vh;
	padding-top: 10rem;
	display: grid;
	grid-template-rows: 1fr var(--gradient-height);

	text-align: center;

	/* #62ffff7f, #4cbfc97f */
	background: /* temp */
			linear-gradient(0turn, #fff, #0000 var(--gradient-height)),
			linear-gradient(0turn, #62ffff, var(--col-blue) var(--gradient-height));
	color: #fff;

	
	--arrow-clip-path: polygon(
		0 0,
		50% 100%,
		100% 0);
}

header-main {
	/* margin: 0 15vw; */
	padding: 0 4em 2em 4em;
	display: grid;
	grid-template-columns: 1fr minmax(2em, 8vw) 1fr;

	width: auto;
	place-self: center;
	justify-items: center;

	--button-gap: 30px;

	/* sine of slant angle, to account for gap being at an angle when shifting vertically */
	--button-slant-sine-fac: 0.83022113; /* = sin(atan(140 / 94)) */

	--button-shift-width-large: calc(var(--button-width-large) + var(--button-gap));
	--button-shift-height-large: calc(var(--button-height-large) + var(--button-gap) * var(--button-slant-sine-fac) * 1.5); /* why 1.5? */

	--button-shift-width: calc(var(--button-width) + var(--button-gap));
}


/* LOGOTYPE */

header-main > logo- {
	grid-area: 1 / 1;

	display: flex;
	flex-flow: column;
	align-items: center;
	justify-content: center;
	width: max-content; /* prevent lines from breaking when screen is too small */
}

header-main > logo- h1 {
	font-size: 4em;
	margin: 0;
}

logo- {
	font-family: var(--font-large);
}

logo- img {
	width: 200px;
}

logo- h1 > strong {
	color: var(--col-yellow);
}

logo- > logo-details {
	margin-top: 1rem;

	font-size: 1.5rem;
	font-weight: 700;
	letter-spacing: 0.1em;
	text-align: center;
	color: var(--col-yellow);
}

logo-details strong {
	font-weight: 900;
	text-transform: uppercase;
	font-size: 2rem;
}

logo-details p {
	margin: 0.15em 0;
}

logo- .light {
	margin-top: 0.5em;

	font-style: italic;
	opacity: 0.75;
	font-size: 1.25em;
}


/* HEADER BUTTONS */

header-nav {
	grid-area: 1 / 3;

	display: grid;
	align-items: start;

	/* approximations since buttons are positioned absolutely. These formulas are dervided from just testing in the browser to fit the buttons */
	/* width: calc(
			1.5 * var(--button-shift-width-large)
			+ var(--button-shift-width));
	margin-left: calc(0.5 * var(--button-width)); */

	/* width = 2 × dist(right edge of buttons, container center) */
	width: calc(var(--button-shift-width-large) + var(--button-shift-width) - var(--button-gap));
	/* margin-left = width of button rows − width */
	margin-left: var(--button-width);

	position: relative;
}

header-nav > hexagonal-button {
	position: absolute;

	/* Variables that position the hexagonal buttons in a tesselating pattern */
	/* `n-shift` is the number of spaces relative to the large buttons */
	--n-shift-x: 0;
	--n-shift-y: 0;
	/* `n-shift-small` ditto but for small buttons */
	--n-shift-small-x: 0;
	/* `n-large-to-small-shift` is the amount to move a small button by so that it appears to follow the same pattern as the large buttons */
	--n-large-to-small-shift-x: 0;
	--n-large-to-small-shift-y: 0;

	left: calc(50%
			+ var(--n-shift-x) * var(--button-shift-width-large) * var(--button-slant-shift-width-fac)
			+ var(--n-shift-small-x) * var(--button-shift-width)
			+ var(--n-large-to-small-shift-x) * var(--button-large-to-small-shift-width));
	top: calc(55%
			+ var(--n-shift-y) * var(--button-shift-height-large) * var(--button-slant-shift-height-fac)
			+ var(--n-large-to-small-shift-y) * var(--button-large-to-small-shift-height));

	/* Makes it so the positions determine the centers of the buttons */
	transform: translate(-50%, -50%);

	--shadow-color: var(--col-blue-shadow);
}

hexagonal-button {
	display: grid;
	width: var(--button-width);

	color: var(--col-blue);

	font-weight: 900;
	font-size: 1.35em;
	line-height: 1;
	letter-spacing: 0.05em;
	text-transform: uppercase;
	text-decoration: none;

	--shadow-color: var(--col-blue-shadow-7f);

	filter: drop-shadow(0 0.5em 0.5em var(--shadow-color));

	/* So that clicking outside of the <a> doesn't cause the shadow to recede */
	/* Below, the `hexagonal-button > a` rule overrides this */
	pointer-events: none;
}

hexagonal-button.large {
	width: var(--button-width-large);

	font-size: 2.25em;
}


hexagonal-button > * {
	grid-area: 1 / 1;

	/* Offset slightly so the extrusion (::before) is visible */
	transform: translate(0, -0.5em);
}


hexagonal-button {
	transition: filter 0.2s ease;
}

hexagonal-button:where(:hover, :focus-within) {
	filter: drop-shadow(0 0.75em 0.5em var(--shadow-color));

	transition-timing-function: var(--button-bounce-ease);
}

/* hexagonal-button:focus-within:focus-visible {
	outline: 4px dashed #fff;
	outline-offset: 4px;
} */

/* Animations that occur on :hover and :active */

hexagonal-button:active {
	filter: drop-shadow(0 0 0 var(--shadow-color));

	transition-duration: 0.03s;
	transition-timing-function: ease;
}

/* Notice: <a> does not move */
hexagonal-button > button-top {
	transition: transform 0.2s ease;
}

hexagonal-button > a:where(:hover, :focus-visible) + button-top {
	/* Raised slightly */
	transform: translate(0, -1em);

	transition-timing-function: var(--button-bounce-ease);
}

hexagonal-button > a:active + button-top {
	/* Pressed down */
	transform: translate(0, 0);

	transition-duration: 0.03s;
	transition-timing-function: ease;
}

/* This pseudoelement is the extrusion of each hexagonal button */
hexagonal-button::before {
	content: " ";
	display: block;
	position: absolute;
	clip-path: var(--button-clip-path);

	width: 100%;
	aspect-ratio: var(--button-width-fac) / var(--button-height-fac);

	background: linear-gradient(0.25turn, var(--col-orange) 50%, var(--col-red) 50%);
				/* linear-gradient(0.75turn, var(--col-orange) 50%, var(--col-red) 50%);
	background-repeat: no-repeat;
	background-size: 100% 50%, 100% 50%;
	background-position-y: 100%, 0; */
}

hexagonal-button > :where(a, button-top) {
	clip-path: var(--button-clip-path);
	aspect-ratio: var(--button-width-fac) / var(--button-height-fac);
}

hexagonal-button > a {
	display: block;

	pointer-events: auto;
}

hexagonal-button > button-top {
	display: grid;
	place-items: center;
	text-align: center;

	background: var(--col-button-orange);

	user-select: none;
	pointer-events: none;
}

hexagonal-button.strong button-top {
	background: var(--col-button-yellow);
}

 
header > header-other {
	grid-area: 2 / 1;
}

header-other {
	display: flex;
	align-items: end;
	justify-content: center;
}

header-other scroll-indicator {
	--scroll-indicator-offset-bottom: 15vh;

	padding: calc(var(--gradient-height) - var(--scroll-indicator-offset-bottom)) 1em 0 1em;
	margin-bottom: var(--scroll-indicator-offset-bottom);
	position: relative;

	font-family: var(--font-large);
	font-size: 1.5rem;
	letter-spacing: 0.05em;
	font-style: italic;
	text-transform: lowercase;

	background: linear-gradient(#0000, var(--col-blue) 25%);
	color: var(--col-yellow);

	user-select: none;

	transition: padding-top 0.5s var(--button-bounce-ease),
			margin-bottom 0.5s var(--button-bounce-ease);
}

header-other scroll-indicator::before {
	content: "";

	display: block;
	clip-path: var(--arrow-clip-path);
	width: 100%;
	aspect-ratio: calc(2 * var(--button-slant-width-fac)) / var(--button-slant-height-fac);

	position: absolute;
	top: 100%;
	left: 0;

	background: var(--col-blue);
}

header-other scroll-indicator:where(:hover, :focus-within) {
	--scroll-indicator-offset-bottom: 12vh;
}

/* header-other scroll-indicator:focus-within {
	outline: 4px dashed var(--col-yellow);
	outline-offset: 4px;
} */

header-other scroll-indicator a {
	position: absolute;
	width: 100%;
	height: calc(100% + var(--scroll-indicator-offset-bottom));
	top: 0;
	left: 0;

	transition: height 0.5s var(--button-bounce-ease);
}


/* ARTICLE */

article {
	padding: 0 8vw;
}

h1 {
	font-family: var(--font-heading);
}

h2 {
	font-family: var(--font-heading);
	font-size: 3rem;
	text-transform: uppercase;
}

h2 > strong {
	font-size: 4rem;
	font-style: italic;
	color: var(--col-orange);
}

article p {
	font-size: 1.2em;
	line-height: 2;
}

article p + h2 {
	margin-top: 6rem;
}


/* FOOTER */

footer {
	padding: 2rem 8vw 6rem 8vw;
	display: flex;
	flex-flow: column;
	align-items: start;

	background: var(--col-blue);
	color: #fff;
}

footer section {
	display: flex;
}

footer section > * {
	margin-right: 4em;
	display: flex;
	flex-flow: column;
	align-items: start;
}

footer a {
	color: var(--col-orange);
}

footer a:where(:hover, :focus-visible) {
	color: var(--col-yellow);
}

footer a:active {
	opacity: 0.5;
}

footer > * {
	line-height: 1.5;
}


/* NAVBAR */

nav {
	position: fixed;
	width: 100%;
	height: 4em;
	display: flex;
	align-items: stretch;
	justify-content: space-evenly;
	/* padding: 0 4em; */

	
	background: var(--col-blue);

	color: #fff;
	text-align: center;
	font-family: var(--font-large);

	box-shadow: 0 -3.5em 4em 4em var(--col-blue-shadow);
	/* filter: drop-shadow(0 0 2em #000000af); */
}

nav logo- {
	--logomark-height: 3em;

	display: flex;
	align-items: center;
	height: 100%;
}

nav logo- img {
	height: var(--logomark-height);
	width: calc(var(--logomark-height) * var(--button-width-fac) / var(--logomark-height-fac));
	transform: translate(0, 0.3em);
	z-index: 1; /* to appear in front of point */
}

nav logo- h1 {
	margin: 0;
	margin-left: 0.75em;
	letter-spacing: 0.02em;
}

/* point that peeks out under the logomark */
nav logo-::before {
	content: " ";

	width: calc(var(--logomark-height) * var(--button-aspect-ratio) / var(--logomark-to-button-ratio));
	position: absolute;
	bottom: -1em;
	aspect-ratio: var(--button-width-fac) / var(--button-height-fac);

	background: var(--col-blue);

	clip-path: var(--button-clip-path);
}

nav a {
	color: inherit;
	text-decoration: inherit;
}

nav > link-rack {
	display: flex;
	align-items: center;
	margin: 0 1em;
	padding: 0 1em;
	overflow-x: auto;

	white-space: nowrap;
}

nav > link-rack a {
	padding: 0 1em;
	margin: 0 0.5em;

	color: var(--col-yellow);
	letter-spacing: 0.02em;
	/* text-transform: uppercase; */

	border-radius: 1em;
	box-shadow: 0 0 0 0,
		0 0 0 12px #0000,
		0 0 0 14px #0000,
			0 0 0 18px #0000;
	
	transition: box-shadow 0.5s cubic-bezier(0.15, 1.84, 0.6, 0.9);
}

nav > link-rack a:where(:hover, :focus-visible) {
	box-shadow: 0 0 0 2px,
			0 0 0 4px var(--col-blue),
			0 0 0 4px var(--col-blue),
			0 0 0 8px;
}

nav > link-rack a:active {
	box-shadow: 0 0 0 6px,
			0 0 0 10px var(--col-blue),
			0 0 0 10px var(--col-blue),
			0 0 0 12px;
}

nav > link-rack a.strong {
	color: var(--col-orange);
}