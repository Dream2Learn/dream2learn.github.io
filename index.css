* {
	box-sizing: border-box;
}

body {
	/* width: 100vw; */
	min-height: 100vh;
	margin: 0;

	font-family: Overpass, sans-serif;
	font-weight: 700;

	color: var(--col-blue);

	--col-button-orange: #fca62b;
	--col-button-yellow: #fcc250;
	--col-blue: #283673;
	--col-yellow: #f8dc3c;
	--col-orange: #f0773a;
	--col-red: #b02228;

	--header-font: Zilla Slab, "Gill Sans", "Gill Sans MT", "Trebuchet MS", sans-serif;
}

main {
	display: flex;
	flex-flow: column;

	padding-bottom: 5em;
}

main > header {
	--gradient-height: 20vh;

	min-height: 100vh;
	padding-top: 6em;
	display: grid;

	/* #62ffff7f, #4cbfc97f */
	background: /* temp */
			linear-gradient(#0000 calc(100vh - var(--gradient-height)), #fff),
			linear-gradient(var(--col-blue) calc(100vh - var(--gradient-height)), #62ffff);
	color: #fff;
}

header-content {
	margin: 0 15vw;
	display: grid;
	grid-template-rows: 1fr var(--gradient-height);
	grid-template-columns: repeat(2, 1fr);

	/* M 140,0 0,94 V 179 l 140,94 140,-94 V 94 Z */
	/* width = 280; height = 273 */

	--button-clip-path: polygon(
		calc(140 / 280 * 100%) 0,
		0 calc(94 / 273 * 100%),
		0 calc(179 / 273 * 100%),
		calc(140 / 280 * 100%) 100%,
		100% calc(179 / 273 * 100%),
		100% calc(94 / 273 * 100%));

	--button-width-fac: 280;
	--button-height-fac: 273;

	/* dimensions of one slanted edge of the hexagonal button */
	--button-slant-width-fac: 140;
	--button-slant-height-fac: 94;

	/* factors to multiply with the shift sizes in order for the slants to line up */
	--button-slant-shift-width-fac: calc(1 - var(--button-slant-width-fac) / var(--button-width-fac));
	--button-slant-shift-height-fac: calc(1 - var(--button-slant-height-fac) / var(--button-height-fac));


	--button-aspect-ratio: calc(var(--button-width-fac) / var(--button-height-fac));

	--button-width: 115px;
	--button-height: calc(var(--button-width) / var(--button-aspect-ratio));

	--button-width-large: 200px;
	--button-height-large: calc(var(--button-width-large) / var(--button-aspect-ratio));
	--button-gap: 30px;

	/* shift for a small button to be positioned properly amid a group of large buttons */
	--button-large-to-small-shift-height: calc((var(--button-height-large) - var(--button-height)) / 2);
	--button-large-to-small-shift-width: calc((var(--button-width-large) - var(--button-width)) / 2);

	/* sine of slant angle, to account for gap being at an angle when shifting vertically */
	--button-slant-sine-fac: 0.83022113; /* = sin(atan(140 / 94)) */

	--button-shift-width-large: calc(var(--button-width-large) + var(--button-gap));
	--button-shift-height-large: calc(var(--button-height-large) + var(--button-gap) * var(--button-slant-sine-fac) * 1.5); /* why 1.5? */

	--button-shift-width: calc(var(--button-width) + var(--button-gap));


	--button-bounce-ease: cubic-bezier(0, 1.82, 0.76, 1);

	
	--arrow-clip-path: polygon(
		0 0,
		50% 100%,
		100% 0);
}


/* LOGOTYPE */

header-content > logotype- {
	grid-area: 1 / 1;

	display: flex;
	flex-flow: column;
	align-items: center;
	justify-content: center;
}

logotype- img {
	width: 200px;
}

logotype- h1 {
	font-family: var(--header-font);
	font-size: 4em;
	margin: 0;
}

logotype- h1 strong {
	color: var(--col-yellow);
}

logotype- > logotype-details {
	margin-top: 2rem;

	font-size: 1.5rem;
	font-weight: 700;
	letter-spacing: 0.1em;
	text-align: center;
	color: var(--col-yellow);
}

logotype-details strong {
	font-weight: 900;
	text-transform: uppercase;
	font-size: 2rem;
}

logotype-details p {
	margin: 0.25em 0;
}


/* HEADER BUTTONS */

header-nav {
	grid-area: 1 / 2;

	position: relative;
}

header-nav > expander- {
	display: block;
	width: calc(2 * var(--button-width-large));
	visibility: hidden;
}

header-nav > :where(hexagonal-button, a) {
	position: absolute;

	/* Variables that position the hexagonal buttons in a tesselating pattern */
	/* `n-shift` is the number of spaces relative to the large buttons */
	--n-shift-x: 0;
	--n-shift-y: 0;
	/* `n-shift-small` ditto but for small buttons */
	--n-shift-small-x: 0;
	/* `n-large-to-small-shift` is the amount to move a small button by so that it appears to follow the same pattern as the large buttons */
	--n-large-to-small-shift-x: 0;
	--n-large-to-small-shift-y: 0;

	left: calc(50%
			+ var(--n-shift-x) * var(--button-shift-width-large) * var(--button-slant-shift-width-fac)
			+ var(--n-shift-small-x) * var(--button-shift-width)
			+ var(--n-large-to-small-shift-x) * var(--button-large-to-small-shift-width));
	top: calc(55%
			+ var(--n-shift-y) * var(--button-shift-height-large) * var(--button-slant-shift-height-fac)
			+ var(--n-large-to-small-shift-y) * var(--button-large-to-small-shift-height));

	/* Makes it so the positions determine the centers of the buttons */
	transform: translate(-50%, -50%);
}

hexagonal-button {
	display: grid;

	color: var(--col-blue);

	font-weight: 900;
	font-size: 1.35em;
	line-height: 1;
	letter-spacing: 0.05em;
	text-transform: uppercase;
	text-decoration: none;

	filter: drop-shadow(0 0.5em 0.5em #0000007f);

	transition: filter 0.2s var(--button-bounce-ease);
}

hexagonal-button.large {
	font-size: 2.25em;
}


hexagonal-button > * {
	grid-area: 1 / 1;

	/* Offset slightly so the extrusion (::before) is visible */
	transform: translate(0, -0.5em);
}

/* Animations that occur on :hover and :active */
hexagonal-button:active {
	filter: drop-shadow(0 0 0 #0000007f);
}

hexagonal-button > button-top {
	transition: transform 0.2s ease;
}

hexagonal-button > a:hover + button-top {
	/* Raised slightly */
	transform: translate(0, -1em);

	transition: transform 0.2s var(--button-bounce-ease);
}

hexagonal-button > a:active + button-top {
	/* Pressed down */
	transform: translate(0, 0);

	transition: transform 0.03s ease;
}

/* This pseudoelement is the extrusion of each hexagonal button */
hexagonal-button::before {
	content: " ";
	display: block;
	position: absolute;
	clip-path: var(--button-clip-path);

	width: 100%;
	aspect-ratio: var(--button-width-fac) / var(--button-height-fac);

	background: linear-gradient(0.25turn, var(--col-orange) 50%, var(--col-red) 50%);
				/* linear-gradient(0.75turn, var(--col-orange) 50%, var(--col-red) 50%);
	background-repeat: no-repeat;
	background-size: 100% 50%, 100% 50%;
	background-position-y: 100%, 0; */
}

hexagonal-button > :where(a, button-top) {
	clip-path: var(--button-clip-path);
	aspect-ratio: var(--button-width-fac) / var(--button-height-fac);
}

hexagonal-button > a {
	display: block;
	width: 100%;
	height: 100%;
}

hexagonal-button > button-top {
	display: grid;
	place-items: center;
	text-align: center;
	width: var(--button-width);

	background: var(--col-button-orange);

	user-select: none;
	pointer-events: none;
}

hexagonal-button.strong button-top {
	background: var(--col-button-yellow);
}

hexagonal-button.large button-top {
	width: var(--button-width-large);
}


header-content > header-other {
	grid-area: 1/1 / 3/3;
	
	display: flex;
	align-items: end;
	justify-content: center;
}

header-other scroll-down {
	padding: 3em 1em 0 1em;
	margin-bottom: 15vh;
	position: relative;

	font-size: 1.5rem;
	letter-spacing: 0.05em;
	font-style: italic;
	text-transform: lowercase;

	background: linear-gradient(#0000, var(--col-blue) 25%);
	color: var(--col-yellow);
}

header-other scroll-down::after {
	content: "";

	display: block;
	clip-path: var(--arrow-clip-path);
	width: 100%;
	aspect-ratio: calc(2 * var(--button-slant-width-fac)) / var(--button-slant-height-fac);

	position: absolute;
	top: 100%;
	left: 0;

	background: var(--col-blue);
}


/* ARTICLE */

article {
	margin: 0 8vw;
}

h2 {
	font-family: var(--header-font);
	font-size: 3rem;
	text-transform: uppercase;
}

h2 > strong {
	font-size: 4rem;
	font-style: italic;
	color: var(--col-orange);
}

article p {
	line-height: 1.5;
}